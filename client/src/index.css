@import 'tailwindcss';

@theme {
  --animate-spin: spin 7s linear infinite;

  --font-antonDisplay: 'Anton', sans-serif;
  --font-gochiHand: 'Gochi Hand', cursive;
  --font-leagueSpartan: 'League Spartan', sans-serif;
  --font-patrickHand: 'Patrick Hand SC', cursive;

  --color-primary: #eec201; /* a855f7 */
  --color-secondary: #a855f7; /* eec201 */
  --color-tertiary: #4b5563;
  --color-neutral-white: #e5e7eb;
  --color-chess: #24292e;
  --color-japanese: #ff6ec7;

  --shadow-chessCard: var(--color-chess) 2px 5px 2px,
    var(--color-chess) 0px 2px 0px;

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

::root {
  --header-heiht: 0px;
}

@layer base {
  .mainTitle {
    @apply font-patrickHand text-4xl text-center font-bold;
  }

  .subtitle {
    @apply font-leagueSpartan font-bold text-3xl max-md:text-2xl text-center mb-2;
    color: var(--subtitle-color, var(--color-primary));
  }

  .mainText {
    @apply font-patrickHand text-2xl text-neutral-white;
  }

  .regularText {
    @apply font-leagueSpartan text-lg text-neutral-white;
  }
}

@layer components {
  .heroSection {
    min-height: calc(100vh - var(--header-height));
    /* Debug background */
    /* background: rgba(255, 255, 255, 0.05); */
  }

  .screenMain {
    width: min(96%, 1200px);
    margin-inline: auto;
  }

  .screenLarge {
    width: min(96%, 1600px);
    margin-inline: auto;
  }

  .page {
    @apply space-y-12 py-6;
  }

  .pageHeroCentered {
    @apply space-y-12 pb-6;
  }

  .instructorBanner {
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0),
      #ffffff60 50%,
      #ffffff95
    );
    color: var(--color-tertiary);
    border-radius: 2px;
    font-size: 0.875rem;
    font-weight: 600;

    padding-block: 2px;
    padding-right: 4px;

    display: inline-block;
  }

  .customLineBreak {
    width: min(100%, 800px);
    height: 2px;
    background: linear-gradient(
      to right,
      rgba(255, 0, 0, 0),
      /* 
        use a custom line color as the gradient's start color, 
        else the default color 
      */
        var(--line-color, var(--color-primary)) 30%,
      var(--line-color, var(--color-primary)) 70%,
      rgba(255, 0, 0, 0)
    );
    margin-block: 20px;
    display: block;
  }

  /* Helper Classes */
  .flexrow-center {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  .flexcol-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .flexcol {
    display: flex;
    flex-direction: column;
  }

  .wh-screen {
    width: 100vw;
    height: 100vh;
  }

  .wh-full {
    width: 100%;
    height: 100%;
  }

  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }

  .absolute-top-left {
    position: absolute;
    top: 0;
    left: 0;
  }

  .absolute-top-center {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .absolute-top-right {
    position: absolute;
    top: 0;
    right: 0;
  }

  .absolute-middle-left {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }

  .absolute-middle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .absolute-middle-right {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
  }

  .absolute-bottom-left {
    position: absolute;
    bottom: 0;
    left: 0;
  }

  .absolute-bottom-center {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .absolute-bottom-right {
    position: absolute;
    bottom: 0;
    right: 0;
  }

  .fixed-top-left {
    position: fixed;
    top: 0;
    left: 0;
  }

  .fixed-top-center {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .fixed-top-right {
    position: fixed;
    top: 0;
    right: 0;
  }

  .fixed-middle-left {
    position: fixed;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }

  .fixed-middle {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .fixed-middle-right {
    position: fixed;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
  }

  .fixed-bottom-left {
    position: fixed;
    bottom: 0;
    left: 0;
  }

  .fixed-bottom-center {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
  }

  .fixed-bottom-right {
    position: fixed;
    bottom: 0;
    right: 0;
  }
}
